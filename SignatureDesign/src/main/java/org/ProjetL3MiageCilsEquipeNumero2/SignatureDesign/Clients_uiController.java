package org.ProjetL3MiageCilsEquipeNumero2.SignatureDesign;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.control.TextField;
import javafx.scene.control.TextFormatter;
import javafx.scene.control.TableView.TableViewSelectionModel;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.effect.GaussianBlur;

import java.io.IOException;

import org.ProjetL3MiageCilsEquipeNumero2.Magasin.Client;
import javafx.collections.ListChangeListener;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.MenuItem;

import javafx.scene.layout.AnchorPane;

import javafx.scene.layout.VBox;
import javafx.util.converter.IntegerStringConverter;
import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;

public class Clients_uiController {

	// barre
	@FXML
	private Button stocks;
	@FXML
	private Button rh;
	@FXML
	private AnchorPane rhpanel;
	@FXML
	private Button clientsbutton;
	@FXML
	private Button vendeursbutton;
	@FXML
	private Button sales;
	@FXML
	private Button stats;

	// clients
	@FXML
	private VBox affichage;
	@FXML
	private TextField search_bar;
	@FXML
	private Button filtres_button;
	// table
	@FXML
	private TableView<Client> main_table;
	@FXML
	private TableColumn<Client, Integer> id_col;
	@FXML
	private TableColumn<Client, String> nom_col;
	@FXML
	private TableColumn<Client, String> prenom_col;
	// panel
	@FXML
	private Label v_id;
	@FXML
	private Label v_nom;
	@FXML
	private Label v_prenom;
	@FXML
	private Label v_portable;
	@FXML
	private Label v_adresse;
	@FXML
	private Label v_mail;
	// options
	@FXML
	private Label option;
	@FXML
	private MenuItem modifier;
	@FXML
	private MenuItem supprimer;
	@FXML
	private MenuItem nouveau;
	// creation client
	@FXML
	private AnchorPane createpanel;
	@FXML
	private TextField nom;
	@FXML
	private TextField portable;
	@FXML
	private TextField prenom;
	@FXML
	private TextField adresse;
	@FXML
	private TextField email;
	@FXML
	private Button create;
	@FXML
	private Label msgerreur;
	@FXML
	private Button annuler;
	// modification
	@FXML
	private Button modif;

	TableViewSelectionModel<Client> selectionModel = null;
	ObservableList<Client> selection = null;

	// initialisation
	@FXML
	public void initialize() {
		// formatters input int (portable)
		portable.setTextFormatter(new TextFormatter<>(new IntegerStringConverter()));
		// affichage tables
		id_col.setCellValueFactory(new PropertyValueFactory<Client, Integer>("id"));
		nom_col.setCellValueFactory(new PropertyValueFactory<Client, String>("nom"));
		prenom_col.setCellValueFactory(new PropertyValueFactory<Client, String>("prenom"));
		Client.clientsUpdate();
		main_table.setItems(Client.getClients());
		// lorsque l'utilisateur clique sur un client le card lateral s'actualise
		selectionModel = main_table.getSelectionModel();
		selection = selectionModel.getSelectedItems();
		selection.addListener(new ListChangeListener<Client>() {
			@Override
			public void onChanged(Change<? extends Client> change) {
				// si un article est selectionne
				if (!selection.isEmpty()) {
					Client focus = selection.get(0);
					panelUpdate(focus);
				}
			}
		});
	}

	/*
	 * actualise les valeur du panel à partir d'un client
	 * 
	 * @param
	 */
	public void panelUpdate(Client focus) {
		v_id.setText(Integer.toString(focus.getId()));
		v_nom.setText(focus.getNom());
		v_prenom.setText(focus.getPrenom());
		v_portable.setText(Integer.toString(focus.getNum_tel()));
		v_adresse.setText(focus.getAdresse());
		v_mail.setText(focus.getEmail());
	}

	// Event Listener on Button[#stocks].onAction
	@FXML
	public void afficheStock(ActionEvent event) throws IOException {
		App.setRoot("Articles_ui");
	}

	// Event Listener on Button[#rh].onAction
	@FXML
	public void afficheRH(ActionEvent event) throws IOException {
		if(rhpanel.isVisible()) {
			rhpanel.setVisible(false);
			affichage.setDisable(false);
			affichage.setEffect(null);
			affichage.setVisible(true);
		}else {
			rhpanel.setVisible(true);
			affichage.setEffect(new GaussianBlur());
			affichage.setDisable(true);
			
		}
	}
	@FXML
	public void afficheClients(ActionEvent event) throws IOException {
		App.setRoot("Clients_ui");
	}
	@FXML
	public void afficheVendeurs(ActionEvent event) throws IOException {
		App.setRoot("Vendeurs_ui");
	}

	// Event Listener on Button[#sales].onAction
	@FXML
	public void afficheSales(ActionEvent event) throws IOException {
		App.setRoot("Ventes_ui");
	}

	// Event Listener on Button[#stats].onAction
	@FXML
	public void afficheStats(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on MenuItem[#modifier].onAction
	@FXML
	public void modifierPanel(ActionEvent event) {
		if (!selection.isEmpty()) {
			option.setText("Modifier Article");
			create.setVisible(false);
			modif.setVisible(true);
			affichage.setEffect(new GaussianBlur());
			affichage.setDisable(true);
			// focus = article selectionne
			Client focus = selection.get(0);
			nom.setText(focus.getNom());
			portable.setText(Integer.toString(focus.getNum_tel()));
			prenom.setText(focus.getPrenom());
			adresse.setText(focus.getAdresse());
			email.setText(focus.getEmail());
			createpanel.setVisible(true);
		}
	}

	// panel default
	public void cardDefault() {
		v_id.setText("N/A");
		v_nom.setText("N/A");
		v_prenom.setText("N/A");
		v_portable.setText("N/A");
		v_adresse.setText("N/A");
		v_mail.setText("N/A");
	}

	// Event Listener on MenuItem[#supprimer].onAction
	@FXML
	public void supprimer(ActionEvent event) {
		if (!selection.isEmpty()) {
			// focus = article selectionne
			Client focus = selection.get(0);
			// suppression de l'article selectionne
			focus.delete();
			// actualisation de la table articles
			Client.clientsUpdate();
			// on vide la selection
			selectionModel.clearSelection();
			// on met à jour le panel avec des valeurs N/A car aucun Client est selectionne
			cardDefault();
		}
	}

	public void panelDefault() {
		nom.setText(null);
		prenom.setText(null);
		portable.setText(null);
		adresse.setText(null);
		email.setText(null);
		msgerreur.setVisible(false);
	}

	/*
	 * ouvre un panel de création d'article
	 */
	@FXML
	public void createPanel() {
		option.setText("Ajout Client");
		create.setVisible(true);
		modif.setVisible(false);
		affichage.setEffect(new GaussianBlur());
		affichage.setDisable(true);
		panelDefault();
		createpanel.setVisible(true);

	}

	// Event Listener on Button[#create].onAction
	@FXML
	public void createClient(ActionEvent event) {
		if (portable.getText() == "" || portable.getText() == null || nom.getText() == null || prenom.getText() == null
				|| adresse.getText() == null || email.getText() == null) {
			// portable n'est pas un chiffre
			msgerreur.setVisible(true);
		} else {
			Client.addClient(nom.getText(), prenom.getText(), Integer.parseInt(portable.getText()), adresse.getText(),
					email.getText());
			Client.clientsUpdate();
			createpanel.setVisible(false);
			affichage.setDisable(false);
			affichage.setEffect(null);
			affichage.setVisible(true);
		}
	}

	// Event Listener on Button[#annuler].onAction
	@FXML
	public void annuler(ActionEvent event) {
		createpanel.setVisible(false);
		affichage.setDisable(false);
		affichage.setEffect(null);
		affichage.setVisible(true);
	}

	// Event Listener on Button[#modif].onAction
	@FXML
	public void modifierClient(ActionEvent event) {
		if (portable.getText() == "" || portable.getText() == null || nom.getText() == null || prenom.getText() == null
				|| adresse.getText() == null || email.getText() == null) {
			// portable n'est pas un chiffre
			msgerreur.setVisible(true);
		} else {
			Client focus = selection.get(0);
			focus.modifierClient(nom.getText(), prenom.getText(), Integer.parseInt(portable.getText()),
					adresse.getText(), email.getText());
			Client.clientsUpdate();
			createpanel.setVisible(false);
			affichage.setDisable(false);
			affichage.setEffect(null);
			affichage.setVisible(true);

			// on met à jour le panel avec des valeurs N/A car aucun client est selectionne
			cardDefault();
		}
	}
}
